openapi: 3.0.1
info:
  title: API Locações
  description: 'Bla Bla Bla'
  termsOfService: http://swagger.io/terms/
  contact:
    email: devbruno@facef.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://stage.locacao.io/v1
- url: https://api.locacao.io/v1
tags:
- name: combustiveis
  description: Tipos de combustíveis
- name: carros
  description: Carros cadastrados
- name: classes
  description: Classes de Carros
- name: marcas
  description: Marcas dos Carros
- name: filiais
  description: Empresas Filiais
- name: pessoas
  description: Entidade Pessoas
- name: tipos
  description: Tipos de Pessoas
- name: grupos
  description: Grupos de Pessoas
- name: locacoes
  description: Locações
- name: status
  description: Status das locações
- name: precos
  description: Preços das locações
- name: politicas
  description: Políticas de preços/locações
- name: promocoes
  description: Promoções
- name: enderecos
  description: Endereços
- name: telefones
  description: Telefones
paths:
  /combustiveis:
    get:
      tags:
      - combustiveis
      summary: Retorna os tipos de combustíveis cadastrados
      operationId: getCombustiveis
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Filtrar pelo nome do combustível
        - in: query
          name: offset
          schema:
            type: integer
          description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de itens a serem retornados
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Combustivel'
        404:
          description: Nenhum combustível encontrado
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - combustiveis
      summary: Adiciona um novo tipo de combustível
      operationId: addCombustivel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Combustivel'
        required: true
      responses:
        200:
          description: Combustível cadastrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Combustivel'
        400:
          description: Verifique os campos e tente novamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /combustiveis/{id}:
    get:
      tags:
      - combustiveis
      summary: Retorna o combustível com o Id informado
      operationId: getCombustivel
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Combustivel'
        404:
          description: Nenhum endereço encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - combustiveis
      summary: Atualizar um tipo de combustível
      operationId: updateCombustivel
      parameters:
      - name: id
        in: path
        description: Id do combustível que irá ser atualizado
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Combustivel'
        required: true
      responses:
        200:
          description: Combustível atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Combustivel'
        400:
          description: Verifique os campos e tente novamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - combustiveis
      summary: Exclui o combustível com o Id informado
      operationId: deleteCombustivel
      parameters:
      - name: id
        in: path
        description: Id do combustível que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Combustível deletado com sucesso
        400:
          description: Erro ao excluir combustível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum combustível encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /carros:
    get:
      tags:
      - carros
      summary: Retorna os carros cadastrados
      operationId: getCarros
      parameters:
      - in: query
        name: nome
        schema:
          type: string
        description: Filtrar pelo nome do carro
      - in: query
        name: marca
        schema:
          type: string
        description: Filtrar pela marca do carro
      - in: query
        name: classe
        schema:
          type: string
        description: Filtrar pela classe do carro
      - in: query
        name: offset
        schema:
          type: integer
        description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
      - in: query
        name: limit
        schema:
          type: integer
        description: Número de itens a serem retornados
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carro'
        400:
          description: Invalid status value
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - carros
      summary: Cria um carro
      description: Cria o carro na base de dados.
      operationId: createCarro
      requestBody:
        description: Objeto carro
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Carro'
        required: true
      responses:
        200:
          description: Carro criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carro'
        400:
          description: Erro ao inserir carro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /carros/{id}:
    get:
      tags:
      - carros
      summary: Retorna o carro com o Id informado
      operationId: getCarro
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carro'
        404:
          description: Nenhum carro encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - carros
      summary: Atualizar os dados do carro
      operationId: updateCarro
      parameters:
      - name: id
        in: path
        description: Id do carro que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carro'
        required: true
      responses:
        200:
          description: Carro atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carro'
        400:
          description: Erro ao atualizar carro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum carro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - carros
      summary: Exclui o carro com o Id informado
      operationId: deleteCarro
      parameters:
      - name: id
        in: path
        description: Id do carro que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Carro excluído com sucesso
        400:
          description: Erro ao excluir carro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum endereço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /classes:
    get:
      tags:
      - classes
      summary: Retorna as classes de carros cadastradas
      operationId: getClasses
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Filtrar pelo nome da classe
        - in: query
          name: offset
          schema:
            type: integer
          description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de itens a serem retornados
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classe'
        400:
          description: Nenhuma classe encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - classes
      summary: Cria uma classe
      description: Cria uma classe na base de dados.
      operationId: createClasse
      requestBody:
        description: Objeto classe
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Classe'
        required: true
      responses:
        200:
          description: Classe criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classe'
        400:
          description: Erro ao inserir classe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /classes/{id}:
    get:
      tags:
      - classes
      summary: Retorna a classe com o Id informado
      operationId: getClasse
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classe'
        404:
          description: Nenhuma classe encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - classes
      summary: Atualizar os dados da classe
      operationId: updateClasse
      parameters:
      - name: id
        in: path
        description: Id da classe que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe'
        required: true
      responses:
        200:
          description: Classe atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classe'
        400:
          description: Erro ao atualizar classe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma classe encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - classes
      summary: Exclui a classe com o Id informado
      operationId: deleteClasse
      parameters:
      - name: id
        in: path
        description: Id da classe que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Classe excluída com sucesso
        400:
          description: Erro ao excluir classe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma classe encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /marcas:
    get:
      tags:
      - marcas
      summary: Retorna as marcas de carros cadastradas
      operationId: getMarcas
      parameters:
      - in: query
        name: nome
        schema:
          type: string
        description: Filtrar pelo nome da marca
      - in: query
        name: offset
        schema:
          type: integer
        description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
      - in: query
        name: limit
        schema:
          type: integer
        description: Número de itens a serem retornados
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Marca'
        400:
          description: Nenhuma marca encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - marcas
      summary: Cria uma marca
      description: Cria uma marca na base de dados.
      operationId: createMarca
      requestBody:
        description: Objeto marca
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Marca'
        required: true
      responses:
        200:
          description: Marca criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca'
        400:
          description: Erro ao inserir marca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /marcas/{id}:
    get:
      tags:
      - marcas
      summary: Retorna a marca com o Id informado
      operationId: getMarca
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca'
        404:
          description: Nenhuma marca encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - marcas
      summary: Atualizar os dados da marca
      operationId: updateMarca
      parameters:
      - name: id
        in: path
        description: Id da marca que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marca'
        required: true
      responses:
        200:
          description: Marca atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca'
        400:
          description: Erro ao atualizar marca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma marca encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - marcas
      summary: Exclui a marca com o Id informado
      operationId: deleteMarca
      parameters:
      - name: id
        in: path
        description: Id da marca que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Marca excluída com sucesso
        400:
          description: Erro ao excluir marca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma marca encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /filiais:
    get:
      tags:
      - filiais
      summary: Retorna as filiais cadastradas
      operationId: getFiliais
      parameters:
      - in: query
        name: nome
        schema:
          type: string
        description: Filtrar pelo nome da filial
      - in: query
        name: offset
        schema:
          type: integer
        description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
      - in: query
        name: limit
        schema:
          type: integer
        description: Número de itens a serem retornados
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filial'
        400:
          description: Nenhuma filial encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - filiais
      summary: Cria uma filial
      description: Cria uma filial na base de dados.
      operationId: createFilial
      requestBody:
        description: Objeto filial
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Filial'
        required: true
      responses:
        200:
          description: Filial criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
        400:
          description: Erro ao inserir filial
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /filiais/{id}:
    get:
      tags:
      - filiais
      summary: Retorna a filial com o Id informado
      operationId: getFilial
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
        404:
          description: Nenhuma filial encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - filiais
      summary: Atualizar os dados da filial
      operationId: updateFilial
      parameters:
      - name: id
        in: path
        description: Id da filial que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filial'
        required: true
      responses:
        200:
          description: Filial atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
        400:
          description: Erro ao atualizar filial
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma filial encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - filiais
      summary: Exclui a filial com o Id informado
      operationId: deleteFilial
      parameters:
      - name: id
        in: path
        description: Id da filial que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Filial excluída com sucesso
        400:
          description: Erro ao excluir filial
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma filial encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /pessoas:
    get:
      tags:
      - pessoas
      summary: Retorna as pessoas cadastradas
      operationId: getPessoas
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pessoa'
        400:
          description: Nenhuma pessoa encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - pessoas
      summary: Cria uma pessoa
      description: Cria uma pessoa na base de dados.
      operationId: createPessoa
      requestBody:
        description: Objeto pessoa
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Pessoa'
        required: true
      responses:
        200:
          description: Pessoa criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
        400:
          description: Erro ao inserir pessoa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /pessoas/{id}:
    get:
      tags:
      - pessoas
      summary: Retorna a pessoa com o Id informado
      operationId: getPessoa
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
        404:
          description: Nenhuma pessoa encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - pessoas
      summary: Atualizar os dados da pessoa
      operationId: updatePessoa
      parameters:
      - name: id
        in: path
        description: Id da pessoa que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa'
        required: true
      responses:
        200:
          description: Pessoa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
        400:
          description: Erro ao atualizar pessoa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma pessoa encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - pessoas
      summary: Exclui a pessoa com o Id informado
      operationId: deletePessoa
      parameters:
      - name: id
        in: path
        description: Id da pessoa que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Pessoa excluída com sucesso
        400:
          description: Erro ao excluir pessoa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma pessoa encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tipos:
    get:
      tags:
      - tipos
      summary: Retorna os tipos de pessoas cadastradas
      operationId: getTipos
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoPessoa'
        400:
          description: Nenhum tipo encontrado
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - tipos
      summary: Cria um tipo de pessoas
      description: Cria um tipo de pessoas na base de dados.
      operationId: createTipo
      requestBody:
        description: Objeto tipo de pessoa
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/TipoPessoa'
        required: true
      responses:
        200:
          description: Tipo criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipoPessoa'
        400:
          description: Erro ao inserir tipo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tipos/{id}:
    get:
      tags:
      - tipos
      summary: Retorna o tipo com o Id informado
      operationId: getTipo
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipoPessoa'
        404:
          description: Nenhum tipo encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - tipos
      summary: Atualizar os dados do tipo
      operationId: updateTipo
      parameters:
      - name: id
        in: path
        description: Id do tipo que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TipoPessoa'
        required: true
      responses:
        200:
          description: Tipo atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipoPessoa'
        400:
          description: Erro ao atualizar tipo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum tipo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - tipos
      summary: Exclui o tipo com o Id informado
      operationId: deleteTipo
      parameters:
      - name: id
        in: path
        description: Id do tipo que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Tipo excluído com sucesso
        400:
          description: Erro ao excluir tipo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum tipo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /grupos:
    get:
      tags:
      - grupos
      summary: Retorna os grupos de pessoas cadastradas
      operationId: getGrupos
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPessoa'
        400:
          description: Nenhum grupo encontrado
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - grupos
      summary: Cria um grupo de pessoas
      description: Cria um grupo de pessoas na base de dados.
      operationId: createGrupo
      requestBody:
        description: Objeto grupo de pessoa
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/GrupoPessoa'
        required: true
      responses:
        200:
          description: Grupo criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoPessoa'
        400:
          description: Erro ao inserir grupo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /grupos/{id}:
    get:
      tags:
      - grupos
      summary: Retorna o grupo com o Id informado
      operationId: getGrupo
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
        404:
          description: Nenhuma pessoa encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - grupos
      summary: Atualizar os dados do grupo
      operationId: updateGrupo
      parameters:
      - name: id
        in: path
        description: Id do grupo que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrupoPessoa'
        required: true
      responses:
        200:
          description: Grupo atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoPessoa'
        400:
          description: Erro ao atualizar grupo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum grupo encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - grupos
      summary: Exclui o grupo com o Id informado
      operationId: deleteGrupo
      parameters:
      - name: id
        in: path
        description: Id do grupo que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Grupo excluído com sucesso
        400:
          description: Erro ao excluir grupo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum grupo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /locacoes:
    get:
      tags:
      - locacoes
      summary: Retorna as locações cadastradas
      operationId: getLocacoes
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Locacao'
        400:
          description: Nenhuma locação encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - locacoes
      summary: Cria uma locação
      description: Cria uma locação na base de dados.
      operationId: createLocacao
      requestBody:
        description: Objeto locação
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Locacao'
        required: true
      responses:
        200:
          description: Locação criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locacao'
        400:
          description: Erro ao inserir locação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /locacoes/{id}:
    get:
      tags:
      - locacoes
      summary: Retorna a locação com o Id informado
      operationId: getLocacao
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locacao'
        404:
          description: Nenhuma locação encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - locacoes
      summary: Atualizar os dados da locação
      operationId: updateLocacao
      parameters:
      - name: id
        in: path
        description: Id da locação que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locacao'
        required: true
      responses:
        200:
          description: Locação atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locacao'
        400:
          description: Erro ao atualizar locação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma locação encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - locacoes
      summary: Exclui a locação com o Id informado
      operationId: deleteLocacao
      parameters:
      - name: id
        in: path
        description: Id da locação que irá ser excluída
        required: true
        schema:
          type: number
      responses:
        200:
          description: Locação excluída com sucesso
        400:
          description: Erro ao excluir locação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma locação encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /status:
    get:
      tags:
      - status
      summary: Retorna os status cadastradas
      operationId: getAllStatus
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        400:
          description: Nenhum status encontrado
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - status
      summary: Cria um status
      description: Cria um status na base de dados.
      operationId: createStatus
      requestBody:
        description: Objeto status
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        200:
          description: Status criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Erro ao inserir status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /status/{id}:
    get:
      tags:
      - status
      summary: Retorna o status com o Id informado
      operationId: getStatus
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        404:
          description: Nenhum status encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - status
      summary: Atualizar os dados do status
      operationId: updateStatus
      parameters:
      - name: id
        in: path
        description: Id do status que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        200:
          description: Status atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Erro ao atualizar status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum status encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - status
      summary: Exclui o status com o Id informado
      operationId: deleteStatus
      parameters:
      - name: id
        in: path
        description: Id do status que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Status excluído com sucesso
        400:
          description: Erro ao excluir status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum status encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /precos:
    get:
      tags:
      - precos
      summary: Retorna os preços cadastrados
      operationId: getPrecos
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preco'
        400:
          description: Nenhum preço encontrado
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - precos
      summary: Cria um preço
      description: Cria um preço na base de dados.
      operationId: createPreco
      requestBody:
        description: Objeto preco
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Preco'
        required: true
      responses:
        200:
          description: Preço criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preco'
        400:
          description: Erro ao inserir preço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /precos/{id}:
    get:
      tags:
      - precos
      summary: Retorna o preço com o Id informado
      operationId: getPreco
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preco'
        404:
          description: Nenhum preço encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - precos
      summary: Atualizar os dados do preço
      operationId: updatPreeco
      parameters:
      - name: id
        in: path
        description: Id do preço que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preco'
        required: true
      responses:
        200:
          description: Preço atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preco'
        400:
          description: Erro ao atualizar preço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum preço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - precos
      summary: Exclui o preço com o Id informado
      operationId: deletePreco
      parameters:
      - name: id
        in: path
        description: Id do preço que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Preço excluído com sucesso
        400:
          description: Erro ao excluir preço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum preço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /politicas:
    get:
      tags:
      - politicas
      summary: Retorna as políticas de preços cadastradas
      operationId: getPoliticas
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
      responses:
        200:
          description: status ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Politica'
        400:
          description: Nenhuma política encontrada
          content: {}
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - politicas
      summary: Cria uma política
      description: Cria uma política na base de dados.
      operationId: createPolitica
      requestBody:
        description: Objeto politica
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Politica'
        required: true
      responses:
        200:
          description: Status criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Politica'
        400:
          description: Erro ao inserir política
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /politicas/{id}:
    get:
      tags:
      - politicas
      summary: Retorna a política com o Id informado
      operationId: getPolitica
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Politica'
        404:
          description: Nenhuma política encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - politicas
      summary: Atualizar os dados da política
      operationId: updatePolitica
      parameters:
      - name: id
        in: path
        description: Id da política que irá ser alterada
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Politica'
        required: true
      responses:
        200:
          description: Política atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Politica'
        400:
          description: Erro ao atualizar política
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma política encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - politicas
      summary: Exclui a política com o Id informado
      operationId: deletePolitica
      parameters:
      - name: id
        in: path
        description: Id da política que irá ser excluída
        required: true
        schema:
          type: number
      responses:
        200:
          description: Política excluída com sucesso
        400:
          description: Erro ao excluir política
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma política encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /enderecos:
    get:
      tags:
      - enderecos
      summary: Retorna os endereços cadastrados
      operationId: getEnderecos
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de itens a serem retornados
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
        404:
          description: Nenhum endereço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - enderecos
      summary: Cria um endereço
      description: Cria o endereço na base de dados.
      operationId: createEndereco
      requestBody:
        description: Objeto de endereço
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Endereco'
        required: true
      responses:
        200:
          description: Endereço criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endereco'
        400:
          description: Erro ao inserir endereço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /enderecos/{id}:
    get:
      tags:
      - enderecos
      summary: Retorna o endereço com o Id informado
      operationId: getEndereco
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endereco'
        404:
          description: Nenhum endereço encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - enderecos
      summary: Atualizar os dados do endereço
      operationId: updateEndereco
      parameters:
      - name: id
        in: path
        description: Id do endereço que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
        required: true
      responses:
        200:
          description: Endereço atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endereco'
        400:
          description: Erro ao atualizar endereço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum endereço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - enderecos
      summary: Exclui o endereço com o Id informado
      operationId: deleteEndereco
      parameters:
      - name: id
        in: path
        description: Id do endereço que irá ser excluído
        required: true
        schema:
          type: number
      responses:
        200:
          description: Endereço excluído com sucesso
        400:
          description: Erro ao excluir endereço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum endereço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /promocoes:
    get:
      tags:
      - promocoes
      summary: Retorna as promoções cadastrados
      operationId: getPromocoes
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de itens a serem retornados
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promocao'
        404:
          description: Nenhuma promoção encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - promocoes
      summary: Cria uma promoção
      description: Cria a promoção  na base de dados.
      operationId: createPromocao
      requestBody:
        description: Objeto de promoção
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Promocao'
        required: true
      responses:
        200:
          description: Promoção criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promocao'
        400:
          description: Erro ao inserir Promoção
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /promocoes/{id}:
    get:
      tags:
      - promocoes
      summary: Retorna a promoção com o Id informado
      operationId: getPromocao
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promocao'
        404:
          description: Nenhuma promoção encontrada para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - promocoes
      summary: Atualizar os dados da promoção
      operationId: updatePromocao
      parameters:
      - name: id
        in: path
        description: Id da promoção que irá ser alterado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promocao'
        required: true
      responses:
        200:
          description: Promoção  atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promocao'
        400:
          description: Erro ao atualizar promoção
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma promoção encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - promocoes
      summary: Exclui a promoção com o Id informado
      operationId: deletePromocao
      parameters:
      - name: id
        in: path
        description: Id da promoção  que irá ser excluída
        required: true
        schema:
          type: number
      responses:
        200:
          description: Promoção excluída com sucesso
        400:
          description: Erro ao excluir promoção
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhuma promoção encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /telefones:
    get:
      tags:
      - telefones
      summary: Retorna os telefones cadastrados
      operationId: getTelefones
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: O número de itens a serem ignorados antes de começar a coletar o conjunto de resultados
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de itens a serem retornados
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telefone'
        404:
          description: Nenhum telefone encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - telefones
      summary: Cria um telefone
      description: Cria o telefone na base de dados.
      operationId: createTelefone
      requestBody:
        description: Objeto de telefone
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Telefone'
        required: true
      responses:
        200:
          description: Telefone criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telefone'
        400:
          description: Erro ao inserir telefone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /telefones/{id}:
    get:
      tags:
      - telefones
      summary: Retorna o telefone com o Id informado
      operationId: getTelefone
      parameters:
      - name: id
        in: path
        description: Id informado para busca
        required: true
        schema:
          type: number
      responses:
        200:
          description: pesquisa realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telefone'
        404:
          description: Nenhum telefone encontrado para o Id informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - telefones
      summary: Atualizar o numero do telefone
      operationId: updateTelefone
      parameters:
      - name: id
        in: path
        description: Id do telefone que irá ser modificado
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Telefone'
        required: true
      responses:
        200:
          description: Telefone atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telefone'
        400:
          description: Erro ao atualizar Telefone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum telefone encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - telefones
      summary: Exclui o telefone com o Id informado
      operationId: deleteTelefone
      parameters:
      - name: id
        in: path
        description: Id do telefone que irá ser excluido
        required: true
        schema:
          type: number
      responses:
        200:
          description: Telefone excluído com sucesso
          content: {}
        400:
          description: Erro ao excluir telefone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Nenhum telefone encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Erro interno não identificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    Combustivel:
      required:
        - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    Carro:
      type: object
      properties:
        id:
          type: integer
          format: int64
        placa:
          type: string
        modelo:
          type: string
        ano:
          type: integer
          format: int32
        cor:
          type: string
        descricao:
          type: string
        combustivel:
          $ref: '#/components/schemas/Combustivel'
        classe:
          $ref: '#/components/schemas/Classe'
        marca:
          $ref: '#/components/schemas/Marca'
        filial:
          $ref: '#/components/schemas/Filial'
    Classe:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    Filial:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        endereco:
          $ref: '#/components/schemas/Endereco'
    Marca:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    Telefone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        numero:
          type: string
    TipoPessoa:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    GrupoPessoa:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    Status:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
    Endereco:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cep:
          type: string
        bairro:
          type: string
        numero:
          type: string
        cidade:
          type: string
        estado:
          type: string
    Promocao:
      type: object
      properties:
        id:
          type: integer
          format: int64
        percentual:
          type: number
          format: float
        data_inicial:
          type: string
          format: date-time
        data_final:
          type: string
          format: date-time
    Politica:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tempo_permanencia:
          type: integer
          format: int32
        preco:
          $ref: '#/components/schemas/Preco'
    Preco:
      type: object
      properties:
        id:
          type: integer
          format: int64
        classe:
          $ref: '#/components/schemas/Classe'
        promocao:
          $ref: '#/components/schemas/Promocao'
    Pessoa:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cnh:
          type: string
        tipo:
          $ref: '#/components/schemas/TipoPessoa'
        grupo:
          $ref: '#/components/schemas/GrupoPessoa'
        enderecos:
          $ref: '#/components/schemas/Endereco'
        telefones:
          $ref: '#/components/schemas/Telefone'
    Locacao:
      type: object
      properties:
        id:
          type: integer
          format: int64
        data_retirada:
          type: string
          format: date-time
        data_devolucao:
          type: string
          format: date-time
        local_retirada:
          $ref: '#/components/schemas/Endereco'
        local_devolucao:
          $ref: '#/components/schemas/Endereco'
        status:
          $ref: '#/components/schemas/Status'
        pessoa:
          $ref: '#/components/schemas/Pessoa'
        carro:
          $ref: '#/components/schemas/Carro'
        politica:
          $ref: '#/components/schemas/Politica'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header